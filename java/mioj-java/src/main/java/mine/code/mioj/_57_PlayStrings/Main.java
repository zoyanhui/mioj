package mine.code.mioj._57_PlayStrings;

/**
 * - 玩转字符串
 * 序号：#57
 * 难度：有挑战
 * 时间限制：1000ms
 * 内存限制：10M
 * 描述
 * 是的，又是字符串。
 *
 * 规定两种操作：
 *
 * 一种是在字符串末尾加字符 A。
 * 另一种是先反转整个字符串，再给字符串末尾加上字符 B。
 * 给出一个初始串 S，一个终点串 T。问能否通过这两个操作从 S 变换到 T。如果可以输出 1（弱初始串和终点串相同，视为可以变换），不可以输出 0。
 *
 * 输入
 * 由英文空格分隔的两个字符串，每个字符串只由 AB 两个字符组成
 *
 * 输出
 * 1 或 0，表示可以变换，或不可以变换。
 *
 * 输入样例
 * AB ABB
 * AAAB AAABA
 * AABB BBAAB


 *
 * 输出样例
 * 0
 * 1
 * 1
 * 0
 * 1
 *
 * Created by zhouyanhui3 on 19-11-21.
 */
import java.util.*;

public class Main {
    public static void main(String args[]) {
        Scanner scan = new Scanner(System.in);
        String line;
        while (scan.hasNextLine()) {
            line = scan.nextLine().trim();
            int answer = solution(line);
            System.out.println(answer);
        }
    }

    private static int solution(String line) {
        String[] split = line.split(" ");
        String s = split[0];
        String t = split[1];
        if(s.length() > t.length()){
            return 0;
        }
        int m = t.length() - 1;
        int n = 0;
        while((n < m && s.length() < m - n + 1) || (n >= m && s.length() < n - m + 1)){
            if(t.charAt(m) == 'A'){
                if(m > n){
                    m--;
                }else{
                    m++;
                }
            }else if(t.charAt(m) == 'B'){
                if(m > n){
                    m--;
                    int tmp = m;
                    m = n;
                    n = tmp;
                }else{
                    m++;
                    int tmp = m;
                    m = n;
                    n = tmp;
                }
            }
        }
        if(m > n){
            return s.equalsIgnoreCase(t.substring(n, m+1)) ? 1 : 0;
        }else{
            int k = s.length() - 1;
            for (int i = m; i <= n; i++) {
                if(t.charAt(i) != s.charAt(k)){
                    return 0;
                }
                k--;
            }
            return 1;
        }
    }
}

